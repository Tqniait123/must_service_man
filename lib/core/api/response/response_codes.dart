// ignore_for_file: constant_identifier_names, non_constant_identifier_names
part of 'response.dart';

enum ResponseCode {
  SUCCESS('SUCCESS'),
  BAD_INPUT('BAD_INPUT'),
  REQUIRED_NAME('REQUIRED_NAME'),
  REQUIRED_EMAIL('REQUIRED_EMAIL'),
  INVALID_EMAIL('INVALID_EMAIL'),
  EMAIL_MUST_BE_UNIQUE('EMAIL_MUST_BE_UNIQUE'),
  REQUIRED_PASSWORD('REQUIRED_PASSWORD'),
  PLEASE_CONFIRM_PASSWORD('PLEASE_CONFIRM_PASSWORD'),
  REQUIRED_PHOTO('REQUIRED_PHOTO'),
  PHOTO_MUST_BE_PNG_JPG_WEBP('PHOTO_MUST_BE_PNG_JPG_WEBP'),
  ORGANIZATION_PHOTO_MUST_BE_PNG_JPG_WEBP(
      'ORGANIZATION_PHOTO_MUST_BE_PNG_JPG_WEBP'),
  REQUIRED_ROLE('REQUIRED_ROLE'),
  ROLE_MUST_BE_MANAGER_OR_EMPLOYEE('ROLE_MUST_BE_MANAGER_OR_EMPLOYEE'),
  NOT_EXISTS_EMAIL('NOT_EXISTS_EMAIL'),
  REQUIRED_CODE('REQUIRED_CODE'),
  WRONG_CREDS('WRONG_CREDS'),
  WRONG_OLD_PASSWORD('WRONG_OLD_PASSWORD'),
  REQUIRED_OLD_PASSWORD('REQUIRED_OLD_PASSWORD'),
  REQUIRED_CREATED_AT('REQUIRED_CREATED_AT'),
  REQUIRED_ORGANIZATION_ID('REQUIRED_ORGANIZATION_ID'),
  REQUIRED_DESCRIPTION('REQUIRED_DESCRIPTION'),
  REQUIRED_DEADLINE('REQUIRED_DEADLINE'),
  REQUIRED_USER_IDS('REQUIRED_USER_IDS'),
  REQUIRED_TITLE('REQUIRED_TITLE'),
  REQUIRED_CATEGORY('REQUIRED_CATEGORY'),
  ORGANIZATION_CODE_NOT_FOUND('ORGANIZATION_CODE_NOT_FOUND'),
  NOT_VERIFIED('NOT_VERIFIED'),
  ORGANIZATION_CODE_MUST_BE_UNIQUE('ORGANIZATION_CODE_MUST_BE_UNIQUE'),
  NO_ORGANIZATION_FOUND('NO_ORGANIZATION_FOUND'),
  FREE_TRIAL_ENDED('FREE_TRIAL_ENDED'),

  WRONG_OTP('WRONG_OTP');

  final String message;

  // Constructor

  const ResponseCode(this.message);

  // Static method to convert a string to ResponseCode enum
  static ResponseCode fromString(String code) {
    return ResponseCode.values.firstWhere(
      (resCode) => resCode.toString() == code,
    );
  }
}
