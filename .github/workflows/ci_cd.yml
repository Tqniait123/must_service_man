name: Must Invest User CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    if: contains(github.event.head_commit.message, '[build]') # Only run if message contains [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout My Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      # âœ… Flutter with cache
      - name: Set up Flutter with cache
        uses: flutter-actions/setup-flutter@v4
        with:
          version: "3.32.1"
          channel: stable
          cache: true
          cache-sdk: true

      # âœ… Gradle cache
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      # âœ… Cache NDK + CMake (optional but improves performance)
      - name: Cache Android SDK NDK + CMake
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
          key: ${{ runner.os }}-android-ndk-cmake-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-android-ndk-cmake

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks

      - name: Create key.properties
        run: |
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      # ðŸŽ¯ Build APK if commit message contains [apk]
      - name: Build Release APK
        if: contains(github.event.head_commit.message, '[apk]')
        run: flutter build apk --release

      - name: List APK files
        if: contains(github.event.head_commit.message, '[apk]')
        run: ls -la build/app/outputs/flutter-apk/

      # âš¡ Upload APK directly to Firebase (no artifact storage)
      - name: Upload APK to Firebase App Distribution
        if: contains(github.event.head_commit.message, '[apk]')
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.APP_ID}}
          serviceCredentialsFileContent: ${{secrets.GOOGLE_PLAY_SERVICE_ACCOUNT}}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk

      # ðŸŽ¯ Build AAB if commit message contains [aab]
      - name: Build Release App Bundle
        if: contains(github.event.head_commit.message, '[aab]')
        run: flutter build appbundle --release

      - name: Upload App Bundle as Artifact
        if: contains(github.event.head_commit.message, '[aab]')
        uses: actions/upload-artifact@v4
        with:
          name: app-release-bundle
          path: build/app/outputs/bundle/release/app-release.aab

      # - name: Upload AAB to Google Play
      #   if: contains(github.event.head_commit.message, '[aab]')
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
      #     packageName: com.tqniait.taqwimi
      #     releaseFiles: build/app/outputs/bundle/release/app-release.aab
      #     track: internal
      #     status: draft


      # ðŸŽ¯ Build both if commit message contains [both]
      - name: Build Both APK and AAB
        if: contains(github.event.head_commit.message, '[both]')
        run: |
          flutter build apk --release
          flutter build appbundle --release

      - name: Upload Both as Artifacts
        if: contains(github.event.head_commit.message, '[both]')
        uses: actions/upload-artifact@v4
        with:
          name: app-release-both
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

      - name: Upload APK to Firebase (Both)
        if: contains(github.event.head_commit.message, '[both]')
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.APP_ID}}
          serviceCredentialsFileContent: ${{secrets.GOOGLE_PLAY_SERVICE_ACCOUNT}}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk

      # - name: Upload AAB to Google Play (Both)
      #   if: contains(github.event.head_commit.message, '[both]')
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
      #     packageName: com.tqniait.taqwimi
      #     releaseFiles: build/app/outputs/bundle/release/app-release.aab
      #     track: internal
      #     status: draft
